%option noyywrap

%{
#include<string.h>
char  nomes[1000];
int i=0;
char *tmp;


void inser(char *texto) {
nomes[i]=*texto;
i++;

}

void trata() {
nomes[i]='\0';
int v = 1;

  if(nomes[v]==' ') {
		char aux[1000]; int i = 0;
   	while(nomes[v]==' ') variavel++;
   	while(nomes[v]!='\0') {
      aux[o] = nomes[variavel];
      i++;
      v++;
		}
		aux[i]='\0';
   	i = 0;

   	while(aux[i]!='\0') {
			nomes[i]=aux[i];
    	i++;
  	}
 		nomes[i]='\0';
	}

  int l = strlen(nomes);
	int j = l - 1;

	while(nomes[j] == ' ') j--;

	while(nomes[j] != ' ' && j!= 0){
		j--;
	}
	int k=1;
	nomes[k]='.';
	k++;

	if(j!=0) {
		while(nomes[j]!='\0') {
			nomes[k]=nomes[j];
     	j++;
     	k++;
		}

		nomes[k]='\0';
		i=0;
	}
	else {
		nomes[k]='\0';
		i=0;
	}
}


void funcao() {
	int j;
	int i = 0;

	if (tmp) {
  	strcat(tmp," and ");
		int l = strlen(tmp);
		tmp[l]=' ';
		l++;

	for (j=0 ; nomes[j] != '\0';j++) {
		tmp[l] = nomes[j];
   	l ++;
	}

	tmp[l]='\0';

}

	else {
		tmp=(char *)malloc(1000);
   		for(j=0; nomes[j] != '\0';j++)
				tmp[j] = nomes[j];

			tmp[j]='\0';
		}
}

void print() {

char h[1000]="author = {";

strcat(h,tmp);
int l = strlen(h);
h[l] = '}';
l++;
h[l++]=',';

h[l]='\0';
printf("%s",h);

}


%}


%x AUT

%%


"author ="[ ]*"\""  {BEGIN (AUT);}
"author ="[ ]*"\{"  {BEGIN (AUT);}


<AUT>"\}"  {inser(yytext); }
<AUT>"\""  {inser(yytext); }
<AUT>"\,"[ ]+  {trata();funcao();}
<AUT>[ ]+"and"[ ]+  {trata();funcao();}
<AUT>[ ]+"and"(\n)  {trata();funcao();}
<AUT>"\"""\,"     {trata();funcao();print();tmp=NULL;BEGIN INITIAL;}
<AUT>"\}""\,"     {trata();funcao();print();tmp=NULL;BEGIN INITIAL;}
<AUT>[ '-}] {inser(yytext); }

\"[a-zA-Z] 	{printf("{%c", yytext[1]);}
[a-zA-Z]\" 	{printf("%c}", yytext[0]);}


%%

int yywrap() {return 1;}
int main(){
	yylex();

  free(tmp);
	return 0;
}
